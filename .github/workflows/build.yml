# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  pull_request_target:
    types:
      - closed
    branches:
      - "release"
      - "release/**"

jobs:
  build-upload:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      urls: ${{ steps.upload.outputs.urls }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: poetry
      #----------------------------------------------
      #  --------    Build and release   ---------
      #----------------------------------------------
      - name: Build and Release
        id: build
        env:
          body: ${{ github.event.pull_request.body }}
        run: |
          version=$(poetry version -s)
          echo "version=$version" >> $GITHUB_OUTPUT

          poetry build
          gh release create $version $(ls dist) -t "$version" --notes "${body}"

      - name: Build Hash Fragments
        id: upload
        run: |
          files=$(ls dist)

          sharp_list="#"
          for file in $files; do
              sharp_list="$sharp_list$(basename $file)#"
          done

          filter=".assets[] | select( \"#\" + .name + \"#\" | inside(\"$sharp_list\") ) | .url"
          urls=$(gh release -R ${{ inputs.repo }} view ${{ inputs.tag }} --json assets -q "$filter")

          hash_urls=""
          for url in $urls; do
              for file in $files; do
                  if [ $(basename $url) = $(basename $file) ]; then
                      hash=$(sha256sum $file)
                      hash=(${hash// / }[0])
                      url="$url#sha256=$hash"
                      echo $url
                      hash_urls="$hash_urls$url "
                  fi
              done
          done
          echo "urls=$hash_urls" >> $GITHUB_OUTPUT

  index:
    uses: aioqzone/gh-simple-index/.github/workflows/add.yml@master
    with:
      project: AssetsUpdater
      urls: ${{ needs.build-upload.outputs.urls }}
      repo: aioqzone/aioqzone-index
    # secrets:
    #   REPO_TOKEN: ${{ secrets.PAT }}
